# docker-compose.prod.template.yml
services:
  web:
    build:
      context: ./backend
    container_name: fast-api-app
    command: uvicorn main:app --host 0.0.0.0 --reload
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db/postgres
      - CORS_ORIGINS=$CORS_ORIGINS
    expose:
      - 8000
    depends_on:
      - db

  db:
    image: postgres:15-alpine
    container_name: postgres-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    expose:
      - 5432

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vue-app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    expose:
      - 5173
    command: npm run dev -- --host 0.0.0.0
    environment:
      - VITE_API_URL=$VITE_API_URL

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-proxy
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - web

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $!; done;'"
    networks:
      - default

volumes:
  postgres_data:
